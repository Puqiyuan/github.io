#+TITLE: 用户空间到内核层的接口
#+AUTHOR: Cauchy(pqy7172@gmail.com)
#+OPTIONS: ^:nil
#+EMAIL: pqy7172@gmail.com
#+HTML_HEAD: <link rel="stylesheet" href="../../org-manual.css" type="text/css">
本文主要介绍用户空间的应用通过什么机制来和内核沟通或读取内核导出的信息．但是不会关注这些实现的细节，不过会指出这些实现的代码在哪里，感兴趣的话可以详细研究．比如在哪里可以添加一个目录到/proc下．为了响应ioctl命令，有哪些内核的函数参与处理，以及netlink，一种当前普遍使用的应用与内核通信的机制．

* 概述
内核可以通过不同的接口将它内部的信息导出到用户空间．除了可以使用系统调用，还有其它的三种方式．

+ procfs(/proc文件系统)
  
  虚拟的文件系统，通常挂载在/proc下，可以允许内核将信息以文件的形式导出．这些文件实际上不存在于磁盘里，不过可以通过重定位符存到磁盘，内核的各个组件可以创建这些文件．默认是开启的，不能编译成模块．

+ sysctl(就是/proc/sys目录)

  这下面的文件主要是提供给用户可以读写内核变量的值．主要通过两种方式来改变这些变量的值，一
  是sysctl系统调用，二是/proc/sys下的文件．

+ sysfs(/sys)

  由于前两个系统被滥用，这个文件系统以一种更加整洁的方式导出大量的内核信息．
    
使用ioctl和netlink都可以向内核发送命令．  
* procfs与sysctl

* ioctl
* Netlink
